stages:
  - clean
  - build
  - test
  - deploy

services:
  - name: docker:dind
    command: ["--experimental"]

before_script:
  - apk --no-cache add git just

image: docker:git

variables:
  PLATFORMS: "linux/amd64"

.matrix:
  parallel:
    matrix:
      - VERSION:
          - "3.15"
          - "3.16"
          - "3.17"
          - "3.18"
          - "latest"

build:
  extends:
    - .matrix
  stage: build
  script:
    - just build "${VERSION}" "linux/amd64" "local"
    - just run
    - docker stop alpine-ansible
    - >
      just
      USER="${CI_REGISTRY_USER}"
      PASSWORD="${CI_REGISTRY_PASSWORD}"
      REGISTRY="${CI_REGISTRY}"
      REPOSITORY="${CI_REGISTRY_IMAGE}"
      upload "${VERSION}" "${PLATFORMS}"

scan:
  extends:
    - .matrix
  image:
    name: aquasec/trivy
    entrypoint: [""]
  stage: test
  script:
    - just scan "${CI_REGISTRY_IMAGE}:${VERSION}"

deploy:
  extends:
    - .matrix
  only:
    - master
  retry: 1
  stage: deploy
  script:
    - just upload "${VERSION}" "${PLATFORMS}"

clean:cache:
  extends:
    - .matrix
  stage: clean
  script:
    - >
      docker run
      -e PROJECT_ID=$CI_PROJECT_ID
      -e IMAGE_TAG=$VERSION
      -e IMAGE_LOCATION=$CI_REGISTRY_IMAGE
      -e USER=$CI_REGISTRY_USER
      -e PASSWORD=$CI_REGISTRY_PASSWORD
      rsprta/gitlab-registry-cleaner:latest
  only:
    - branches
  except:
    - master

clean:cache2:
  extends:
    - .matrix
  stage: clean
  script:
    - apk add --no-cache curl jq
    - >
      SCOPE="repository:${CI_REGISTRY_IMAGE}:delete"
      TOKEN=`curl --request GET --user "${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD}" "${CI_SERVER_URL}/jwt/auth?account=${CI_REGISTRY_USER}&service=container_registry&scope=${SCOPE}" |jq -r .token`
      curl --request DELETE --header "Authorization: Bearer ${TOKEN}" --header "Accept: application/vnd.docker.distribution.manifest.v2+json" "https://${CI_REGISTRY}/v2/${CI_REGISTRY_IMAGE}/tags/reference/${VERSION}"
  only:
    - branches
  except:
    - master
